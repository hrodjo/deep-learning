Bayesian Models of Data Streams with Hierarchical Power Priors

Andrés Masegosa 1 2 Thomas D. Nielsen 3 Helge Langseth 2 Darı́o Ramos-López 1 Antonio Salmerón 1
Anders L. Madsen 3 4

Abstract
Making inferences from data streams is a pervasive problem in many modern data analysis applications. But it requires to address the problem of continuous model updating, and adapt to
changes or drifts in the underlying data generating distribution. In this paper, we approach
these problems from a Bayesian perspective covering general conjugate exponential models. Our
proposal makes use of non-conjugate hierarchical priors to explicitly model temporal changes
of the model parameters. We also derive a novel
variational inference scheme which overcomes
the use of non-conjugate priors while maintaining the computational efficiency of variational
methods over conjugate models. The approach is
validated on three real data sets over three latent
variable models.

1. Introduction
Flexible and computationally efficient models for streaming data are required in many machine learning applications, and in this paper we propose a new class of models
for these situations. Specifically, we are interested in models suitable for domains that exhibit changes in the underlying generative process (Gama et al., 2014). We envision
a situation, where one receives batches of data at discrete
points in time. As each new batch arrives, we want to glean
information from the new data, while also retaining relevant information from the historical observations.
Our modelling is inspired by previous works on Bayesian
recursive estimation (Özkan et al., 2013; Kárnỳ, 2014),
power priors (Ibrahim & Chen, 2000) and exponential for1

Department of Mathematics, Unversity of Almerı́a, Almerı́a,
Spain 2 Department of Computer and Information Science, Norwegian University of Science and Technology, Trondheim, Norway 3 Department of Computer Science, Aalborg University, Aalborg, Denmark 4 Hugin Expert A/S, Aalborg, Denmark. Correspondence to: Andrés Masegosa <andresmasegosa@ual.es>.
Proceedings of the 34 th International Conference on Machine
Learning, Sydney, Australia, PMLR 70, 2017. Copyright 2017
by the author(s).

getting approaches (Honkela & Valpola, 2003). However,
all of these methods were developed for slowly changing processes, where the rate of change anticipated by the
model is controlled by a quantity that must be set manually. Our solution, on the other hand, can accommodate
both gradual and abrupt concept drift by continuously assessing the similarity between new and historic data using
a fully Bayesian paradigm.
Building Bayesian models for data streams raises computational problems, as data may arrive with high velocity
and is unbounded in size. We therefore develop an approximate variational inference technique based on a novel
lower-bound of the data likelihood function. The appropriateness of the approach is investigated through experiments
using both synthetic and real-life data, giving encouraging results. The proposed methods are released as part
of an open-source toolbox for scalable probabilistic machine learning (http://www.amidsttoolbox.com)
(Masegosa et al., 2017; 2016b; Cabañas et al., 2016).

2. Preliminaries
In this paper we focus on conjugate exponential Bayesian
network models for performing Bayesian learning on
streaming data. To simplify the presentation, we shall initially focus on the model structure shown in Figure 1 (a).
This model includes the observed data x = xi=1:N , global
hidden variables (or parameters) β = β 1:M , a set of local
hidden variables z = z 1:N , and a vector of fixed (hyper)
parameters denoted by α. Notice how the dynamics of the
process is not included in the model of Figure 1 (a); the
model will be set in the context of data streams in Section 4, where we extend it to incorporate explicit dynamics
over the (global) parameters to capture concept drift.
With the conditional distributions in the model belonging
to the exponential family, we have that all distributions are
of the following form
ln p(Y |pa(Y )) =
ln hY + η Y (pa(Y ))T tY (Y ) − aY (η Y (pa(Y ))),
where pa(Y ) denotes the parents of Y in the directed
acyclic graph of the induced Bayesian network model. The
scalar functions hY and aY (·) are the base measure and

Bayesian Models of Data Streams with HPPs
γ

α

β

β t−1

zi

xi

variational approach exploits the transformation

ρt

βt

z i,t

xi,t

i = 1, . . . , N

i = 1, . . . , N

(a)

(b)

Figure 1. Left figure displays the core of the probabilistic model
examined in this paper. Right figure includes a temporal evolution
model for β t as described in Section 4.

the log-normalizer, respectively; the vector functions η Y (·)
and tY (·) are the natural parameters and the sufficient
statistics vectors, respectively. The subscript Y means that
the associated functional forms may be different for the different factors of the model, but we may remove the subscript when clear from the context. By also requiring that
the distributions are conjugate, we have that the posterior
distribution for each variable in the model has the same
functional form as its prior distribution. Consequently,
learning (i.e. conditioning the model on observations) only
changes the values of the parameters of the model, and not
the functional form of the distributions.
Variational inference is a deterministic technique for finding tractable posterior distributions, denoted by q, which
approximates the Bayesian posterior, p(β, z|x), that is often intractable to compute. More specifically, by letting Q
be a set of possible approximations of this posterior, variational inference solves the following optimization problem
for any model in the conjugate exponential family:
min

q (β ,z )∈Q

KL(q(β, z)|p(β, z|x)),

(1)

where KL denotes the Kullback-Leibler divergence between two probability distributions.
In the mean field variational approach the approximation
family Q is assumed to fully factorize. Extending the notation of Hoffman et al. (2013), we have that
q(β, z|λ, φ) =

M
Y
k=1

q(βk |λk )

N Y
J
Y

q(zi,j |φi,j ),

i=1 j=1

where J is the number of local hidden variables, which is
assumed fixed for all i = 1, . . . , N . The parameterizations
of the variational distributions are made explicit, in that λ
parameterize the variational distribution of β, while φ has
the same role for the variational distribution of z.
To solve the minimization problem in Equation (1), the

ln P (x) = L(λ, φ|x, αu ) + KL(q(β, z|λ, φ)|p(β, z|x)),
(2)
where L(·|·) is a lower bound of ln P (x) since KL is nonnegative. x and αu are introduced in L’s notation to make
explicit the function’s dependency on x, the data sample,
and αu , the natural parameters of the prior over β. As
ln P (x) is constant, minimizing the KL term is equivalent
to maximizing the lower bound. Variational methods maximize this lower bound by applying a coordinate ascent that
iteratively updates the individual variational distributions
while holding the others fixed (Winn & Bishop, 2005). The
key advantage of having a conjugate exponential model is
that the gradients of the L function can be always computed
in closed form (Winn & Bishop, 2005).

3. Related Work
Bayesian inference on streaming data has been widely studied (Ahmed et al., 2011; Doucet et al., 2000; Yao et al.,
2009). In the context of variational inference, there are two
main approaches. Ghahramani & Attias (2000); Broderick et al. (2013) propose recursive Bayesian updating of
the variational approximation. The streaming variational
Bayes (SVB) algorithm (Broderick et al., 2013) is the most
known approach of this category. Alternatively, one could
cast the inference problem as a stochastic optimization
problem. Stochastic variational inference (SVI) (Hoffman
et al., 2013) and the closely related population variational
Bayes (PVB) (McInerney et al., 2015) are prominent examples from this group. SVI assumes the existence of a fixed
data set observed in a sequential manner, and in particular
that this data set has a known finite size. This is unrealistic
when modeling data streams. PVB addresses this problem
by using the frequentist notion of a population distribution,
F, which is assumed to generate the data stream by repeatedly sampling M data points at the time. M parameterizes
the size of the population, and helps control the variance of
the population posterior. Unfortunately, M must be specified by the user. No clear rule exists regarding how to set
it, and McInerney et al. (2015) show that its optimal value
may differ from one data stream to another.
The problem of Bayesian modeling of non-stationary data
streams (i.e., with concept drift (Gama et al., 2014)) is
not addressed by SVB, as it assumes data exchangeability. An online variational inference method, which exponentially forgets the variational parameters associated with
old data, was proposed by Honkela & Valpola (2003). The
so-called power prior approach (Ibrahim & Chen, 2000) is
also based on an exponential forgetting mechanisms, and
has nice theoretical properties (Ibrahim et al., 2003). Nevertheless, both approaches rely on a hyper-parameter determining forgetting, which has to be set manually. PVB can

Bayesian Models of Data Streams with HPPs

also adapt to concept drift, because the variance of the variational posterior never decreases below a given threshold
indirectly controlled by M , but again, the hyper-parameter
has to be set manually.
A time series based modeling approach for concept drift using implicit transition models was pursued by Özkan et al.
(2013); Kárnỳ (2014). Unfortunately, the implicit transition model depends on a hyper-parameter determining the
forgetting-factor, which has to be manually set. In this paper we build on this approach, adapt it to variational settings, and place a hierarchical prior on its forgetting parameter. This greatly improves the flexibility and accuracy of
the resulting model when making inferences over drifting
data streams.

one can restrict the space of possible distributions
p(β t |x1:t−1 ), supported by an unknown transition model,
by the constraint
KL(p(β t |x1:t−1 ), pδ (β t |x1:t−1 )) ≤ κ.

Kárnỳ (2014) and Özkan et al. (2013) seek to approximate
p(β t |x1:t−1 ) by the distribution p̂(β t |x1:t−1 ) having maximum entropy under the constraint in (5); for continuous
distributions the maximum entropy can be formulated relative to an uninformative prior density pu (β t ), which corresponds to the Kullbach-Leibler divergence between the
two distributions. This approach ensures that we will not
underestimate the uncertainty in the parameter distribution
and the particular solution being sought takes the form
p̂(β t |x1:t−1 , ρt ) ∝ pδ (β t |x1:t−1 )ρt pu (β t )(1−ρt ) ,

4. Hierarchical Power Priors
In this section we extend the model in Figure 1 (a) to also
account for the dynamics of the data stream being modeled.
We shall here assume that only the parameters β in Figure 1 (a) are time-varying, which we will indicate with the
subscript t, i.e., β t . First we briefly describe the approach
on which the proposed model is based. Afterwards, we introduce the hierarchical power prior and detail a variational
inference procedure for this model class.
4.1. Power Priors as Implicit Transition Models
In order to extend the model in Figure 1 (a) to data streams,
we may introduce a transition model p(β t |β t−1 ) to explicitly model the evolution of the parameters over time, enabling the estimation of the predictive density at time t:
Z
p(β t |x1:t−1 ) = p(β t |β t−1 )p(β t−1 |x1:t−1 )dβ t−1 .
(3)
However, this approach introduces two problems. First of
all, in non-stationary domains we may not have a single
transition model or the transition model may be unknown.
Secondly, if we seek to position the model within the conjugate exponential family in order to be able to compute
the gradients of L in closed-form, we need to ensure that
the distribution family for β t is its own conjugate distribution, thereby severely limiting model expressivity (we can,
e.g., not assign a Dirichlet distribution to β t ).
Rather than explicitly modeling the evolution of the β t parameters as in Equation (3), we instead follow the approach
of Kárnỳ (2014) and Özkan et al. (2013) who define the
time evolution model implicitly by constraining the maximum KL divergence over consecutive parameter distributions. Specifically, by defining
Z
pδ (β t |x1:t−1 ) = δ(β t − β t−1 )p(β t−1 |x1:t−1 )dβ t−1
(4)

(5)

(6)

where 0 ≤ ρt ≤ 1 is indirectly defined by (5) which in turn
depends on the user defined parameter κ.
In our streaming data setting we follow assumed density filtering (Lauritzen, 1992) and the SVB approach
(Broderick et al., 2013) and employ the approximation
p(β t−1 |x1:t−1 ) ≈ q(β t−1 |λt−1 ), where q(β t−1 |λt−1 ) is
the variational distribution calculated in the previous time
step. Using this approximation in (3) and (4), we can express pδ in terms of λt−1 in which case (6) becomes
p̂(β t |λt−1 , ρt ) ∝ pδ (β t |λt−1 )ρt pu (β t )(1−ρt ) ,

(7)

which we use as the prior density for time step t. Now, if
pu (β t ) belong to the same family as q(β t−1 |λt−1 ), then
p̂(β t |λt−1 , ρt ) will stay within the same family and have
natural parameters ρt λt−1 + (1 − ρt )αu , where αu are the
natural parameters of pu (β t ). Thus, under this approach,
the transitioned posterior remains within the same exponential family, so we can enjoy the full flexibility of the
conjugate exponential family (i.e. computing gradients of
the L function in closed form), an option that would not
be available if one were to explicitly specify a transition
model as in Equation (3).
So, at each time step, we simply have to solve the following variational problem, where only the prior changes with
respect to the original SVB approach,
arg max L(λt , φt |xt , ρt λt−1 + (1 − ρt )αu ).
λt ,φt
As stated in the following lemma, this approach coincides
with the so-called power priors approach (Ibrahim & Chen,
2000), a term that we will also adopt in the following.
Lemma 1. The Bayesian updating scheme described by
Figure 1 (b) and Equation 6, but with ρt fixed to a constant value, is equivalent to the recursive application of

Bayesian Models of Data Streams with HPPs

the Bayesian updating scheme of power priors (Ibrahim &
Chen, 2000). This scheme is expressed as follows:
p(β|x1 , x0 , ρ) ∝ p(x1 |β)p(x0 |β)ρ p(β),
where x0 and x1 is the observation at time 0 (historical
observation) and time 1 (current observation), respectively.
Proof sketch. Translate the recursive Bayesian updating
approach of power priors into an equivalent two time
slice model, where β 0 is given a prior distribution p
and p(β 1 |β 0 ) is a Dirac delta function. The distribution p(β 1 |x0 , x1 , ρ) in this model is equivalent to
p(β|x1 , x0 , ρ), which, in turn, is equivalent (up to proportionality) to p(x1 |β 1 )p̂(β 1 |x0 , ρt ). Note that the last
p̂ term can alternatively be expressed as p̂(β 1 |x0 , ρt ) ∝
pδ (β1 |x0 )ρ p(β1 )1−ρ ∝ pδ (x0 |β1 )ρ p(β1 ).

The perspective provided by Lemma 1 introduces a well
known result of power priors, which is also applicable in
the current context (see the discussion after Theorem 1 in
(Ibrahim et al., 2003)): “the power prior is an optimal prior
to use and in fact minimizes the convex combination of KL
divergences between two extremes: one in which no historical data is used and the other in which the historical
data and current data are given equal weight.” As noted
in (Olesen et al., 1992; Özkan et al., 2013), this schema
works as a moving window with exponential forgetting of
past data, where the effective number of samples or, more
technically, the so-called equivalent sample size of the posterior (Heckerman et al., 1995), converges to,
lim ESSt =

t→∞

|xt |
1−ρ

(8)

if the size of the data batches is constant1 .
For the experimental results reported in Section 5 we shall
refer to the method outlined above as SVB with power priors (SVB-PP).
4.2. The Hierarchical Power Prior Model
In the approach taken by Özkan et al. (2013) (and, by extension, SVB-PP), the forgetting factor ρt is user-defined.
In this paper, we instead pursue a (hierarchical) Bayesian
approach and introduce a prior distribution over ρt allowing
the distribution over ρt (and thereby the forgetting mechanism) to adapt to the data stream.
As we shall see below, in order to support a variational updating scheme we need to restrict the prior distribution over
ρt , effectively limiting the choice of prior distribution to
1

For instance, the ESS of a Beta distribution is equal to the
sum of the components of λt and, in turn, equal to the number of
data samples seen so far plus the prior’s pseudo-samples.

either an exponential distribution or a normal distribution
with fixed variance, both of which should be truncated to
the interval [0, 1]. Unless explicitly stated otherwise, we
shall for now assume a truncated exponential distribution
with natural parameter γ as prior distribution over ρt :
p(ρt |γ) =

γ exp(−γρt )
.
1 − exp(−γ)

(9)

The resulting model can be illustrated as in Figure 1 (b).
We shall refer to models of this type as hierarchical power
prior (HPP) models.
4.3. Variational Updating
For updating the model distributions we pursue a variational approach, where we seek to maximize the evidence
lower bound L in Equation (2) for time step t. However,
since the model in Figure 1 (b) does not define a conjugate
exponential distribution due to the introduction of p(ρt ) we
cannot maximize L directly. Instead we will derive a (double) lower bound L̂ (L̂ ≤ L) and use this lower bound as a
proxy for the updating rules for the variational posteriors.
First of all, by instantiating the lower bound
LHP P (λt , φt , ωt |xt , λt−1 ) in Equation (2) for the
HPP model we obtain
LHP P (λt , φt , ωt |xt , λt−1 ) = Eq [ln p(xt , Z t |β t )]
+ Eq [ln p̂(β t |λt−1 , ρt )]
+ Eq [p(ρt |γ)] − Eq [ln q(Z t |φt )]

(10)

− Eq [q(β t |λt )] − Eq [q(ρt |ωt )],
where ωt is the variational parameter for the variational distribution for ρt ; as we shall see later, ωt is a scalar and is
therefore not shown in boldface. For ease of presentation
we shall sometimes drop from LHP P (λt , φt , ωt |xt , λt−1 )
the subscript as well as the explicit specification of the parameters when these is otherwise clear from the context.
We now define L̂HP P (λt , φt , ωt |xt , λt−1 ) as
L̂HP P (λt , φt , ωt |xt , λt−1 ) = Eq [ln p(xt , Z t |β t )]
+ Eq [ρt ]Eq [ln pδ (β t |λt−1 )] + (1 − Eq [ρt ])Eq [ln pu (β t )]
+ Eq [p(ρt |γ)] − Eq [ln q(Z t |φt )]
− Eq [q(β t |λt )] − Eq [q(ρt |ωt )],

(11)

which provide a lower bound for L.
Theorem 1. L̂HP P gives a lower bound for LHP P :
L̂HP P (λt , φt , ωt |xt , λt−1 ) ≤ LHP P (λt , φt , ωt |xt , λt−1 ).
Proof sketch. The inequality derives by using Equation (12) and observing that ag (ρt λt−1 + (1 − ρt )αu ) ≤
ρt ag (λt−1 ) + (1 − ρt )ag (αu ) because the log-normalizer

Bayesian Models of Data Streams with HPPs
1.0

ag is always a convex function (Wainwright et al., 2008).
Full details are given in the supplementary material.


0.8

w<0, E[ρ]<0.5

E[ρ]

0.6

KL(λt, αu) + γ < KL(λt, λt−1)
w>0, E[ρ]>0.5

0.4

Drift zone

KL(λt, αu) + γ > KL(λt, λt−1)
0.2

Rather than seeking to maximize L we will instead maximize L̂. The gap between the two bounds is determined
only by the log-normalizer of p̂(β t |λt−1 , ρt ):

+ ag (ρt λt−1 + (1 − ρt )αu )]

No drift zone

(12)

0.0

L̂ − L = Eq [ρt ag (λt−1 ) + (1 − ρt )ag (αu )

−30

−20

−10

0

10

20

30

w

Thus, maximizing L̂ wrt. the variational parameters λt and
φ also maxmizes L. By the same observation, we also have
that the (natural) gradients are consistent relative to the two
bounds:
Corollary 1.
ˆ L̂
ˆ L=∇
∇
λt
λt

ˆ L=∇
ˆ L̂ .
∇
φ
φ
t

t

Proof. Follows immediately from Equation (12) because
the difference does not depend of λt and φt .

Thus, updating the variational parameters λt and φt in HPP
models can be done as for regular conjugate exponential
models of the form in Figure 1.
In order to update ωt we rely on L̂, which we can maximize
using the natural gradient wrt. ωt (Sato, 2001) and which
can be calculated in closed form for a restricted distribution
family for ρt .
Lemma 2. Assuming that the sufficient statistics function
for ρt is the identity function, t(ρt ) = ρt , then we have
ˆ ω L̂ =KL(q(β t |λt ), pu (β t ))
∇
t
− KL(q(β t |λt ), pδ (β t |λt−1 )) + γ − ωt

(13)

Figure 2. Relationship between ωt and Eq [ρt ].

γ < KL(q(β t |λt ), pδ (β t |λt−1 ))), then we will get a negative value for ωt when performing coordinate ascent using
Equation (13). This in turn implies that Eq [ρ] < 0.5 because Eq [ρ] = 1/(1 − e−ωt ) − 1/ωt (plotted in Figure 2),
which means that we have a higher degree of forgetting for
past data. If ωt > 0 then Eq [ρ] > 0.5 and less past data is
forgotten. Figure 2 graphically illustrates this trade-off.
4.4. The Multiple Hierarchical Power Prior Model
The HPP model can immediately be extended to include
(i)
multiple power priors ρt , one for each global parameter
(i)
βi . In this model the ρt ’s are pair-wise independent. The
latter ensures that optimizing the L̂ can be performed as
(i)
above, since the variational distribution for each ρt can
be updated independently of the other variational distribu(j)
tions over ρt , for j 6= i. This extended model allows local model substructures to have different forgetting mechanisms, thereby extending the expressivity of the model. We
shall refer to this extended model as a multiple hierarchical
power prior (MHPP) model.

5. Experiments
Proof sketch. Based on a straightforward algebraic derivation of the gradient using standard properties of the exponential family. Full details are given in the supplementary
material.

Note that the truncated exponential distribution (see Equation (9)) satisfies the restriction expressed in Lemma 2, and
also note that the variational posterior q(ρt |ωt ) will be a
truncated exponential density too.
On the other hand, observe that the form of the natural gradient of ωt have an intuitive semantic interpretation, which also extends to the coordinate ascent variational message passing framework (Winn & Bishop, 2005)
as shown by Masegosa et al. (2016a). Specifically, using the constant γ as a threshold, we see that if the uninformed prior pu (β t ) provides a better fit to the variational posterior at time t than the variational parameters
λt from the previous time step (KL(q(β t |λt ), pu (β t )) +

5.1. Experimental Set-up
In this section we will evaluate the following methods:
• Streaming variational Bayes (SVB).
• Four versions of Population Variational Bayes
(PVB)2 : Population-size M equal to the average size
of each data-batch, or M equal to a fixed value (M =
1 000 in Section 5.2 and M = 10 000 in Section 5.3).
Learning-rate ν = 0.1 or ν = 0.01.
• Two versions of SVB-PP: ρ = 0.9 or ρ = 0.99.
• Two versions of SVB-HPP: A single shared ρ (denoted SVB-HPP) or separate ρ(i) parameters (SVBMHPP).
The underlying variational engine is the VMP algorithm
(Winn & Bishop, 2005) for all models; VMP was termi2
We do not compare with SVI, because SVI is a special case
of PVB when M is equal to the total size of the stream.

Bayesian Models of Data Streams with HPPs

0.8
0.6

Real
SVB
PVB−1000−0.1
PVB−1000−0.01
SVB−PP−0.9
SVB−PP−0.99
SVB−HPP

●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●

0.4

●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●

0.2

Estimated p value

1.0

●

●●●●●●

30

40

50

60

70

80

90

100

Time step

Figure 3. E[βt ] in the Beta-Binomial model artificial data set

nated after 100 iterations or if the relative increase in the
lower bound fell below 0.01%. All priors were uninformative, using either flat Gaussians, flat Gamma priors or uniform Dirichlet priors. We set γ = 0.1 for the HPP priors.
Variational parameters were randomly initialized using the
same seed for all methods.
5.2. Evaluation using an Artificial Data Set
First, we illustrate the behavior of the different approaches
in a controlled experimental setting: We produced an artificial data stream by generating 100 samples (i.e., |xt | =
100) from a Binomial distribution at each time step. We artificially introduce concept drift by changing the parameter
p of the Binomial distribution: p = 0.2 for the first 30 time
steps, then p = 0.5 for the following 30 time steps, and
finally p = 0.8 for the last 40 time steps. The data stream
was modelled using a Beta-Binomial model.
Parameter Estimation: Figure 3 shows the evolution of
Eq [βt ] for the different methods. We recognize that SVB
simply generates a running average of the data, as it is not
able to adapt to the concept drift. The results from PVB
depend heavily on the learning rate ν, where the higher
learning rate, which results in the more aggressive forgetting, works better in this example. Recall, though, that ν
needs to be hand-tuned to achieve an optimal performance.
As expected, the choice of M does not have an impact,
because the present model has no local hidden variables
(cf. Section 3). SVB-PP produces results almost identical to PVB when ρ matches the learning rate of PVB (i.e.,
ρ = 1 − ν). Finally, SVB-HPP provides the best results,
almost mirroring the true model.
Equivalent Sample Size (ESS): Figure 4 (left) gives the
evolution of the equivalent sample size, ESSt , for the different methods 3 . The ESS of PVB is always given by the
constant M . For SVB, the ESS monotonically increases
as more data is seen, while SVB-PP exhibits convergence
to the limiting value computed in Equation (8). A different
behaviour is observed for SVB-HPP: It is automatically ad3
For this model, ESS is simply computed by summing up the
components of the λt defining the Beta posterior.

justed. Notice that the values for this model is to be read off
the alternative y-axis. We can detect the the concept drift,
by identifying where the ESS rapidly declines.
Evolution of Expected Forgetting factor: In Figure 4
(right) the series denoted “E[ρ] − 100” shows the evolution
of Eq [ρt ] for the artificial data set. Notice how the model
clearly identifies abrupt concept drift at time steps t = 30
and t = 60. The series denoted “E[ρ] − 1000” illustrates
the evolution of the parameter when we increase the batch
size to 1000 samples. We recognize a more confident assessment about the absence of concept drift as more data is
made available.
5.3. Evaluation using Real Data Sets
5.3.1. DATA AND M ODELS
For this evaluation we consider three real data sets from
different domains:
Electricity Market (Harries, 1999): The data set describes
the electricity market of two Australian states. It contains
45312 instances of 6 attributes, including a class label comparing the change of the electricity price related to a moving average of the last 24 hours. Each instance in the data
set represents 30 minutes of trading; during our analysis
we created batches such that xt contains all information
associated with month t.
The data is analyzed using a Bayesian linear regression
model. The binary class label is assumed to follow a Gaussian distribution in order to fit within the conjugate model
class. Similarly, the marginal densities of the predictive attributes are also assumed to be Gaussian. The regression
coefficients are given Gaussian prior distributions, and the
variance is given a Gamma prior. Note that the overall distribution does not fall inside the conditional conjugate exponential family (Hoffman et al., 2013), hence PVB cannot
be applied here, because lower-bound’s gradient cannot be
computed in closed-form.
GPS (Zheng et al., 2008; 2009; 2010): This data set contains 17 621 GPS trajectories (time-stamped x and y coordinates), totalling more than 4.5 million observations. To
reduce the data-size we kept only one out of every ten measurements. We grouped the data so that xt contains all
data collected during hour t of the day, giving a total of
24 batches of this stream.
Here we employ a model with one independent Gaussian
mixture model per day of the week, each mixture with 5
components. This enables us to track changes in the users’
profiles across hours of the day, and also to monitor how
the changes are affected by the day of the week.
Finance (reference withheld): The data contains monthly
aggregated information about the financial profile of

0.8

500

0

10

20

30

40

50

60

70

80

90

●●●●●●● ●● ● ●●●●●● ● ●●●● ● ●●●●
●●
● ●
●
● ●
●●●●●● ●●● ●● ●●●●● ●● ●●●● ● ●
●
●
●
●
●
● ●
●
●

0.6

●● ● ● ●●●●●●
●●● ●●●●● ●
●
●
●
●
●
●
●
●
●
●

●

0.2

E[ρ]

●

300

●

100

Time step

●

0.0

SVB−HPP

100

6000
2000

SVB−PP−0.9

0.4

10000

●●
●●
●●
●●
●●
●●
●●
●●
●●
●
●
●●
●●
●●
●●
●●
●●
●●
●●
●
●●
●●
●●
●●
●●
●●
●●
●●
●●
●
●
●●
●●
●●
●●
●●
●●
●●
●●
●
●●
●●
●●
●●
●●
●●
●●
●●
●●
●
●
●●
●●
●●

SVB

●

PVB−1000−0.1

0

ESS − Equivalent sample size

Bayesian Models of Data Streams with HPPs

0

10

20

30

40

50

60

E[ρ] 100
E[ρ] 1000

●

70

80

90

100

Time step

Figure 4. ESSt (left) and Eq [ρt ] (right) in the Beta-Binomial model artificial data set

around 50 000 customers over 62 (non-consecutive)
months. Three attributes were extracted per customer, in
addition to a class-label telling whether or not the customer
will default within the next 24 months.
We fit a naı̈ve Bayes model to this data set, where the distribution at the leaf-nodes is 5-component mixture of Gaussians distribution. The distribution over the mixture node is
shared by all the attributes, but not between the two classes
of customers.
A detailed description of all the models, including their
structure and their variational families, is given at the supplementary material.
5.3.2. E VALUATION AND D ISCUSSION
To evaluate the different methods discussed, we look at
the test marginal log-likelihood (TMLL). Specifically, each
data batch is randomly split in a train data set, xt , and a
test data set, x̃t , containing two thirds and one third of
the data batch, respectively.
Then, TMLLt is computed
R
as TMLLt = |x̃1t | p(x̃t , z t |β t )p(β t |xt )dz t dβ t . Figure 5
(left) shows for each method the difference between its
TMLLt and that obtained by SVB (which is considered the
baseline method). To improve readability, we only plot the
results of the best performing method inside each group of
methods. The right-hand side of Figure 5 shows the development of Eq [ρt ] over time for SVB-HPP and SVB-MHPP.
For SVB-HPP we only have one ρt -parameter, and its value
is given by the solid line. SVB-MHPP utilizes one ρ(i) for
(i)
each variational parameter.4 In this case, we plot Eq [ρt ]
at each point in time to indicate the variability between the
different estimates throughout the series. Finally, we compute eachP
method’s aggregated test marginal log-likelihood
T
measure t=1 TMLLt , and report these values in Table 1.
For the electricity data set, we can see that the two proposed
methods (SVB-HPP and SVB-MHPP) perform best. All
models are comparable during the first nine months, which
is a period where our models detect no or very limited con4
The numbers of variational parameters are 14, 78 and 33 for
the Electricity, GPS and Financial model, respectively.

cept drift (cf. top right plot or Figure 5). However, after
this period, both SVB-HPP and SVB-MHPP detects substantial drift, and is able to adapt better than the other methods, which appear unable to adjust to the complex concept
drift structure in the latter part of the data. SVB-HPP and
SVB-MHPP continue to behave at a similar level, mainly
because when drift happens it typically includes a high proportion of the parameters of the model.
For the GPS data set, we can observe how the SVB-MHPP
is superior to the rest of the methods, particularly towards
the end of the series. When looking at Figure 5 (middle
right panel), we can see that a significative proportion of
(i)
the model parameters are drifting (i.e., Eq [ρt ] ≤ 0.05) at
all times, while another proportion of the parameters show
a quite stable behavior (ρ-values above 0.9). This complex
pattern is not captured well by SVB-HPP, which ends up
assuming no concept drift after the initial time-step.
The financial data set shows a different behavior. During the first months, SVB-MHPP slightly outperforms the
rest of the approaches, but after month 30, SVB-PP with
ρ = 0.9 is superior, with SVB-MHPP second. Looking at
(i)
the E[ρt ]-values of SVB-MHPP, we observe that there is
significant concept drift in some of the parameters over the
first few months. However, only a few parameters exhibit
noteworthy drift after the first third of the sequence. Apparently, the simple SVB-PP approach has the upper hand
when the drift is constant and fairly limited, at least when
the optimal forgetting factor ρ has been identified.
We conclude this section by highlighting that the performance of SVB-PP and PVB depend heavily on the hyperparameters of the model, cf. Table 1. As an example, consider SVB-PP for the financial data set. While it was the
best overall with ρ = 0.9, it is inferior to SVB-MHPP if
ρ = 0.99. Similarly, PVB’s performance is sensitive both
to ν (see in particular the results for the GPS data) and M
(financial data). These hyper-parameters are hard to fix,
as their optimal values depend on data characteristics (see
Broderick et al. (2013); McInerney et al. (2015) for similar
conclusions). We therefore believe that the fully Bayesian
formulation is an important strong point of our approach.

Bayesian Models of Data Streams with HPPs

DATA SET

SVB

E LECTRICITY
GPS
F INANCE

-44.91
-1.93
-19.84

PVB
M = 10k
ν = 0.1

PVB
M = 10k
ν = 0.01

PVB
M = |xt |
ν = 0.1

PVB
M = |xt |
ν = 0.01

-2.03
-22.29

-2.72
-22.57

-1.88
-21.81

-2.42
-22.07

SVB-PP
ρ = 0.9

SVB-PP
ρ = 0.99

SVB-HPP

SVB-MHPP

-43.92
-1.89
-19.05

-44.80
-1.92
-19.78

-40.06
-1.86
-19.83

-40.03
-1.74
-19.40

●

●●●

5

●

●
●

●

●

●

●

●

●

0.8
E[ρ]

10

●
●●

●●
●

E[ρ] HPP

0.4

15

●

E[ρ] MHPP

●

0.0

●●●●●●●●●

10

20

30

GPS

GPS

30

PVB−|xt|−0.1

●

0.8

0.5

SVB−HPP
SVB−MHPP
SVB−PP−0.9

0.0

20
Time step

●
● ● ● ●

●

● ● ● ● ● ●

●

●

● ●

● ● ●
● ● ●

E[ρ] HPP

●

E[ρ] MHPP

0.0

−0.5

10

Time step

E[ρ]

1.0

0

0.4

0

●

●

10

20

10

20

Time step

Time step

Finance

Finance

0

2

0

●

●

0

10

20

30

40

PVB−|xt|−0.1

0.4

E[ρ]

0.8

● ●● ●●●●●●●●●●●● ●
●
●●●●●●●●●●●●●●● ●●●●●●● ●● ●●●● ●●● ●●
●
●●
●
●● ●●
●
●
●
●

SVB−HPP
SVB−MHPP
SVB−PP−0.9

0.0

−2

TMLL−Test marginal log−likelihood

Electricity
SVB−HPP
SVB−MHPP
SVB−PP−0.9
SVB−PP−0.99

●

−6

TMLL−Test marginal log−likelihood

Electricity
●

−10

TMLL−Test marginal log−likelihood

Table 1. Aggregated Test Marginal Log-Likelihood.

50

60

Time step

(a) TMLLt improvement over SVB

E[ρ] HPP
E[ρ] MHPP

0

10

20

30

40

50

60

Time step

(b) Eq [ρt ] for SVB-HPP and SVB-MHPP

Figure 5. Results of the competing methods for the three real-life data sets. See text for discussion.

6. Conclusions and Future Work
We have introduced a new class of Bayesian models for
streaming data, able to capture changes in the underlying
generative process. Unlike existing solutions to this problem, aimed at modeling slowly changing processes, our
proposal is able to handle both abrupt and gradual concept
drift following a Bayesian approach. The new model accounts for the dynamics of the data stream by assuming
that only the global parameters evolve over time. We intro-

duce the so-called hierarchical power priors, where a prior
on the learning rate is given allowing it to adapt to the data
stream. We have addressed the complexity of the underlying inference tasks by developing an approximate variational inference scheme that optimizes a novel lower bound
of the likelihood function.
As future work we aim to provide a sound approach to
semantically characterize concept drift by inspecting the
(i)
E[ρt ] values provided by SVB-MHPP.

Bayesian Models of Data Streams with HPPs

Acknowledgements
This work was partly carried out as part of the AMIDST
project. AMIDST has received funding from the European Union’s Seventh Framework Programme for research,
technological development and demonstration under grant
agreement no 619209. Furthermore, this research has
been partly funded by the Spanish Ministry of Economy
and Competitiveness, through projects TIN2015-74368JIN, TIN2013-46638-C3-1-P, TIN2016-77902-C3-3-P and
by ERDF funds.

Hoffman, Matthew D., Blei, David M., Wang, Chong, and
Paisley, John. Stochastic variational inference. Journal
of Machine Learning Research, 14:1303–1347, 2013.
Honkela, Antti and Valpola, Harri. On-line variational
Bayesian learning. In 4th International Symposium on
Independent Component Analysis and Blind Signal Separation, pp. 803–808, 2003.
Ibrahim, Joseph G and Chen, Ming-Hui. Power prior distributions for regression models. Statistical Science, pp.
46–60, 2000.

References
Ahmed, Amr, Ho, Qirong, Teo, Choon Hui, Eisenstein, Jacob, Smola, Alexander J, and Xing, Eric P. Online inference for the infinite topic-cluster model: Storylines from
streaming text. In AISTATS, pp. 101–109, 2011.
Broderick, Tamara, Boy, Nicholas, Wibisono, Andre, Wilson, Ashia C., and Jordan, Michael I. Streaming variational Bayes. In Advances in Neural Information Processing Systems 26, pp. 1727–1735. Curran Associates,
Inc., 2013.

Ibrahim, Joseph G, Chen, Ming-Hui, and Sinha, Debajyoti.
On optimality properties of the power prior. Journal of
the American Statistical Association, 98(461):204–213,
2003.
Kárnỳ, Miroslav. Approximate Bayesian recursive estimation. Information Sciences, 285:100–111, 2014.
Lauritzen, Steffen L. Propagation of probabilities, means,
and variances in mixed graphical association models.
Journal of the American Statistical Association, 87
(420):1098–1108, 1992.

Cabañas, Rafael, Martı́nez, Ana M, Masegosa, Andrés R,
Ramos-López, Darı́o, Samerón, Antonio, Nielsen,
Thomas D, Langseth, Helge, and Madsen, Anders L.
Financial data analysis with PGMs using AMIDST. In
Data Mining Workshops (ICDMW), 2016 IEEE 16th International Conference on, pp. 1284–1287. IEEE, 2016.

Masegosa, A. R., Martı́nez, A. M., Langseth, H., Nielsen,
T. D., Salmerón, A., Ramos-López, D., and Madsen,
A. L. d-VMP: Distributed variational message passing.
In PGM’2016. JMLR: Workshop and Conference Proceedings, volume 52, pp. 321–332, 2016a.

Doucet, Arnaud, Godsill, Simon, and Andrieu, Christophe.
On sequential Monte Carlo sampling methods for
Bayesian filtering. Statistics and computing, 10(3):197–
208, 2000.

Masegosa, Andres R, Martinez, Ana M, and Borchani, Hanen. Probabilistic graphical models on multi-core cpus
using Java 8. IEEE Computational Intelligence Magazine, 11(2):41–54, 2016b.

Gama, João, Žliobaitė, Indrė, Bifet, Albert, Pechenizkiy,
Mykola, and Bouchachia, Abdelhamid. A survey on
concept drift adaptation. ACM Computing Surveys, 46
(4):44:1–44:37, 2014.

Masegosa, Andrés R, Martı́nez, Ana M, Ramos-López,
Darı́o, Cabañas, Rafael, Salmerón, Antonio, Nielsen,
Thomas D, Langseth, Helge, and Madsen, Anders L.
Amidst: a Java toolbox for scalable probabilistic machine learning. arXiv preprint arXiv:1704.01427, 2017.

Ghahramani, Zoubin and Attias, H. Online variational
Bayesian learning. In Slides from talk presented at NIPS
workshop on Online Learning, 2000.
Harries, Michael. Splice-2 comparative evaluation: Electricity pricing. NSW-CSE-TR-9905, School of Computer Siene and Engineering, The University of New
South Wales, 1999.
Heckerman, David, Geiger, Dan, and Chickering, David M.
Learning Bayesian networks: The combination of
knowledge and statistical data. Machine learning, 20(3):
197–243, 1995.

McInerney, James, Ranganath, Rajesh, and Blei, David.
The population posterior and Bayesian modeling on
streams. In Advances in Neural Information Processing Systems 28, pp. 1153–1161. Curran Associates, Inc.,
2015.
Olesen, Kristian G, Lauritzen, Steffen L, and Jensen,
Finn V. ahugin: A system creating adaptive causal probabilistic networks. In Proceedings of the Eighth international conference on Uncertainty in artificial intelligence, pp. 223–229. Morgan Kaufmann Publishers Inc.,
1992.

Bayesian Models of Data Streams with HPPs

Özkan, Emre, Šmdl, Václav, Saha, Saikat, Lundquist,
Christian, and Gustafsson, Fredrik. Marginalized adaptive particle filtering for nonlinear models with unknown
time-varying noise parameters. Automatica, 49(6):1566–
1575, 2013. ISSN 0005-1098.
Sato, Masa-Aki. Online model selection based on the variational Bayes. Neural Computation, 13(7):1649–1681,
2001.
Wainwright, Martin J, Jordan, Michael I, et al. Graphical
models, exponential families, and variational inference.
R in Machine Learning, 1(1–2):
Foundations and Trends
1–305, 2008.
Winn, John M. and Bishop, Christopher M. Variational
message passing. Journal of Machine Learning Research, 6:661–694, 2005.
Yao, Limin, Mimno, David, and McCallum, Andrew. Efficient methods for topic model inference on streaming
document collections. In Proceedings of the 15th ACM
SIGKDD international conference on Knowledge discovery and data mining, pp. 937–946. ACM, 2009.
Zheng, Yu, Li, Quannan, Chen, Yukun, Xie, Xing, and
Ma, Wei-Ying. Understanding mobility based on gps
data. In Proceedings of the 10th International Conference on Ubiquitous Computing, UbiComp ’08, pp. 312–
321, New York, NY, USA, 2008. ACM. ISBN 978-160558-136-1. doi: 10.1145/1409635.1409677.
Zheng, Yu, Zhang, Lizhu, Xie, Xing, and Ma, Wei-Ying.
Mining interesting locations and travel sequences from
gps trajectories. In Proceedings of the 18th International
Conference on World Wide Web, WWW ’09, pp. 791–
800, New York, NY, USA, 2009. ACM. ISBN 978-160558-487-4. doi: 10.1145/1526709.1526816.
Zheng, Yu, Xie, Xing, and Ma, Wei-Ying. Geolife: A collaborative social networking service among user, location and trajectory. IEEE Data Eng. Bull., 33(2):32–39,
2010.

