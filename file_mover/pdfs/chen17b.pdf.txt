Adaptive Multiple-Arm Identification

Jiecao Chen * 1 Xi Chen * 2 Qin Zhang * 1 Yuan Zhou * 1

Abstract
We study the problem of selecting K arms with
the highest expected rewards in a stochastic narmed bandit game. This problem has a wide
range of applications, e.g., A/B testing, crowdsourcing, simulation optimization. Our goal is
to develop a PAC algorithm, which, with probability at least 1 − δ, identifies a set of K arms
with the aggregate regret at most . The notion of
aggregate regret for multiple-arm identification
was first introduced in Zhou et al. (2014) , which
is defined as the difference of the averaged expected rewards between the selected set of arms
and the best K arms. In contrast to Zhou et al.
(2014) that only provides instance-independent
sample complexity, we introduce a new hardness
parameter for characterizing the difficulty of any
given instance. We further develop two algorithms and establish the corresponding sample
complexity in terms of this hardness parameter.
The derived sample complexity can be significantly smaller than state-of-the-art results for a
large class of instances and matches the instanceindependent lower bound upto a log(−1 ) factor
in the worst case. We also prove a lower bound
result showing that the extra log(−1 ) is necessary for instance-dependent algorithms using the
introduced hardness parameter.

1. Introduction
Given a set of alternatives with different quality, identifying high quality alternatives via a sequential experiment is
*

Equal contribution 1 Computer Science Department, Indiana University, Bloomington, IN, USA 2 Stern School of Business, New York University, New York, NY, USA. Correspondence to: Jiecao Chen <jiecchen@umail.iu.edu; supported
in part by NSF CCF-1525024 and IIS-1633215>, Xi Chen
<xchen3@stern.nyu.edu; supported by Google Faculty Research
Fellowship>, Qin Zhang <qzhangcs@indiana.edu; supported
in part by NSF CCF-1525024 and IIS-1633215>, Yuan Zhou
<yzhoucs@indiana.edu>.
Proceedings of the 34 th International Conference on Machine
Learning, Sydney, Australia, PMLR 70, 2017. Copyright 2017
by the author(s).

an important problem in multi-armed bandit (MAB) literature, which is also known as the “pure-exploration” problem. This problem has a wide range of applications. For
example, consider the A/B/C testing problem with multiple
website designs, where each candidate design corresponds
to an alternative. In order to select high-quality designs,
an agent could display different designs to website visitors
and measure the attractiveness of an design. The question
is: how should the agent adaptively select which design to
be displayed next so that the high-quality designs can be
quickly and accurately identified? For another example, in
crowdsourcing, it is critical to identify high-quality workers from a pool of a large number of noisy workers. An
effective strategy is testing workers by gold questions, i.e.,
questions with the known answers provided by domain experts. Since the agent has to pay a fixed monetary reward
for each answer from a worker, it is important to implement
a cost-effective strategy for to select the top workers with
the minimum number of tests. Other applications include
simulation optimization, clinical trials, etc.
More formally, we assume that there are n alternative arms,
where the i-th arm is associated with an unknown reward
distribution Di with mean θi . For the ease of illustration,
we assume each Di is supported on [0, 1]. In practice, it
is easy to satisfy this assumption by a proper scaling. For
example, the traffic of a website or the correctness of an
answer for a crowd worker (which simply takes the value
either 0 or 1), can be scaled to [0, 1]. The mean reward θi
characterizes the quality of the i-th alternative. The agent
sequentially pulls an arm, and upon each pulling of the ith arm, the i.i.d. reward from Di is observed. The goal
of “top-K arm identification” is to design an adaptive arm
pulling strategy so that the top K arms with the largest
mean rewards can be identified with the minimum number of trials. In practice, identifying the exact top-K arms
usually requires a large number of arm pulls, which could
be wasteful. In many applications (e.g., crowdsourcing), it
is sufficient to find an “approximate set” of top-K arms.
To measure the quality of the selected arms, we adopt the
notion of aggregate regret (or regret for short) from Zhou
et al. (2014). In particular, we assume that arms are ordered
by their mean θ1 ≥ θ2 ≥ · · · ≥ θn so that the set of the
best K arms is {1, . . . , K}. For the selected arm set T with

Adaptive Multiple-Arm Identification

the size |T | = K, the aggregate regret RT is defined as,
!
K
X
1 X
RT =
θi −
θi .
(1)
K i=1

the problem of identifying -top-K arms. These algorithms
significantly improve the sample complexity by CLUCBPAC for many common instances and almost match the best
non-adaptive algorithm in the worst case.

The set of arms T with the aggregate regret less than a
pre-determined tolerance level  (i.e. RT ≤ ) is called
-top-K arms. In this paper, we consider the -top-K-arm
problem in the “fixed-confidence” setting: given a target
confidence level δ > 0, the goal is to find a set of -top-K
arms with the probability at least 1 − δ. This is also known
as the PAC (probably approximately correct) learning setting. We are interested in achieving this goal with as few
arm pulls (sample complexity) as possible.

Specifically, we first introduce a new parameter H to characterize the hardness of a given instance. This new hardness parameter H could be smaller than the hardness pae used in the literature, in many natural instances.
rameter H
For example, we show in Lemma 1 that when {θi }ni=1
are sampled from a continuous distribution with bounded
probability density function (which is a common assumption in Bayesian MAB and natural for many applications),
for K = γn
√ with γ e≤ 0.5, our hardness parameter is
= Ω(n/).
H = O(n/ ) while H

i∈T

To solve this problem, Zhou et al. (2014) proposed the
OptMAI
and established its sample complexity

  algorithm
ln δ −1
n
, which is shown to be asymptotically
Θ 2 1 + K
optimal. However, the algorithm and the corresponding
sample complexity in Zhou et al. (2014) are non-adaptive
to the underlying instance. In other words, the algorithm
does not utilize the information obtained in known samples to adjust its future sampling strategy; and as a result,
the sample complexity only involves the parameters K, n,
δ and  but is independent of {θi }ni=1 . Chen et al. (2014)
developed the CLUCB-PAC algorithm and established an
instance-dependent sample complexity for a more general
class of problems, including the -top-K arm identification
problem as one of the key examples. When applying the
CLUCB-PAC algorithm to identify -top-K arms, the sample complexity becomes
O((log H (0,) + log δ −1 )H (0,) )
Pn
(0,)
where H
= i=1 min{(∆i )−2 , −2 }, ∆i = θi −θK+1
for i ≤ K, ∆i = θK − θi for i > K. The reason why
we adopt the notation H (0,) will be clear from Section
1.1. However, this bound may be improved for the following two reasons. First, intuitively, the hardness parameter H (0,) is the total number of necessary pulls needed
for each arm to identify whether it is among the top-K
arms or the rest so that the algorithm can decide whether
to accept or reject the arm (when the arm’s mean is close to the boundary between the top-K arms and the
rest arms, it can be either selected or rejected). However, in many cases, even if an arm’s mean is -far from
the boundary, we may still be vague about the comparison between its mean and the boundary, i.e. either selecting or rejecting the arm satisfies the aggregate regret
bound. This may lead to fewer number of pulls and a
smaller hardness parameter for the same instance. Second, the worst-case sample complexity for CLUCB-PAC
becomes O((log n + log −1 + log δ −1 )n−2 ). When δ is a
constant, this bound is log n times more than the best nonadaptive algorithm in Zhou et al. (2014).
In this paper, we explore towards the above two directions and introduce new instance-sensitive algorithms for

Using this new hardness parameter H, we first propose an easy-to-implement algorithm– A DAPTIVE T OP K and relate its sample complexity to H.
In
Theorem 1, we show that ADAPTIVE
T
OP
K
uses

O log log(−1 ) + log n + log δ −1 H
to
identify
-top-K arms with probability at least 1 − δ. Note that
this bound has a similar form as the one in Chen
√ et al.
(2014), but as mentioned above, we have an  -factor
improvement in the hardness parameter for those instances
where Lemma 1 applies.
We then propose the second algorithm (I MPROVED T OP K)
with even less sample complexity, which removes the log n
factor in the sample complexity. In Theroem 2, we show
that the algorithm uses O log −1 + log δ −1 H pulls to
identify -top-K arms with probability 1 − δ. Since H
is always Ω(n/2 ) (which will be clear when the H is defined in Section 1.1), the worst-case sample complexity of
I MPROVED T OP K matches the best instance-independent
bound shown in Zhou et al. (2014) up to an extra log(−1 )
factor (for constant δ). We are also able to show that
this extra log(−1 ) factor is a necessary expense by being
instance-adaptive (Theorem 3). It is also noteworthy that
as a by-product of establishing I MPROVED T OP K, we developed an algorithm that approximately identifies the k-th
best arm, which may be of independent interest. Details are
deferred to the full version of this paper. 1
We are now ready to introduce our new hardness parameters and summarize the main results in technical details.
1.1. Summary of Main Results
Following the existing literature (see, e.g., Bubeck et al.
(2013)), we first define the gap of the i-th arm
(
θi − θK+1
if i ≤ K
∆i (K) =
(2)
θK − θi
if i ≥ K + 1.
1
Full version of this paper is available online at https://
arxiv.org/abs/1706.01026.

Adaptive Multiple-Arm Identification

Note that when K = 1, ∆i (K) becomes θ1 − θi for all
i ≥ 2 and ∆1 (K) = θ1 − θ2 . When K is clear from
the context, we simply use ∆i for ∆i (K). One commonly
used hardness parameter for quantifying the sample complexity in the existing literature (see,P
e.g., Bubeck et al.
e , n ∆−2 . If there
(2013); Karnin et al. (2013)) is H
i=1 i
e and thus the
is an extremely small gap ∆i , the value of H
corresponding sample complexity can be super large. This
hardness parameter is natural when the goal is to identify
the exact top-K arms, where a sufficient gap between an
arm and the boundary (i.e. θK and θK+1 ) is necessary.
However, in many applications (e.g., finding high-quality
workers in crowdsourcing), it is an overkill to select the exact top-K arms. For example, if all the top-M arms with
M > K have very close means, then any subset of them
of size K forms an -top-K set in terms of the aggregate
regret in (1). Therefore, to quantify the sample complexity
when the metric is the aggregate regret, we need to construct a new hardness parameter.
Given K and an error bound , let us define t = t(, K) to
be the largest t ∈ {0, 1, 2, . . . , K − 1} such that
∆K−t · t ≤ K

and

∆K+t+1 · t ≤ K.

(3)

Note that ∆K−t · t = (θK−t − θK+1 ) · t upper-bounds
the total gap of the t worst arms in the top K arms and
∆K+t+1 · t = (θK − θK+t+1 ) · t upper-bounds the total
gap of the t best arms in the non-top-K arms. Intuitively,
the definition in (3) means that we can tolerate exchanging
at most t best arms in the non-top-K arms with the t worst
arms in the top-K arms.
Given t = t(, K), we define
Ψt = min(∆K−t , ∆K+t+1 ),

We also develop a more sophisticated algorithm with an
improved sample complexity, the details of which are deferred to the full version of this paper.
Theorem 2 There is an algorithm that computes -top-K
arms with probability at least (1 − δ), and pulls the arms
at most O log −1 + log δ −1 H (t,) times.
Since Ψt ≥  and H (t,) ≤ n−2 , the worst-case sample

complexity by Theorem 2 is O n2 log −1 + log δ −1 .
While the asymptotically
instance-independent
 optimal


n
ln δ −1
sample complexity is Θ 2 1 + K
(by Zhou et al.
(2014)), we show that the log −1 factor in Theorem 2 is
necessary for instance-dependent algorithms using H (t,)
as a hardness parameter. In particular, we establish the following lower-bound result, the detailed proof of which is
deferred to the full version of this paper.
Theorem 3 For any n, K such that n = 2K, and any  =
Ω(n−1 ), there exists an instance on n arms so that H (t,) =
Θ(n) and it requires Ω(n log −1 ) pulls to identify a set of
-top-K arms with probability at least 0.9.
Note that since H (t,) = Θ(n) in our lower bound instances, our Theorem 3 shows that the sample complexity has to be at least Ω(H (t,) log −1 ) in these instances.
In other words, our lower bound result shows that for
any instance-dependent algorithm, and any  = Ω(n−1 ),
there exists an instance where sample complexity has to be
Ω(H (t,) log −1 ). While Theorem 3 shows the necessity
of the log −1 factor in Theorem 2, it is not a lower bound
for every instance of the problem.

(4)
1.2. Review of and Comparison with Related Works

and
Ψt = max(, Ψt ).

(5)

We now introduce the following parameter to characterize
the hardness of a given instance,
H=H

(t,)

=

n
X

min{(∆i )−2 , (Ψt )−2 }.

(6)

i=1

It is worthwhile to note that no matter how small the gap
∆i is, since Ψt ≥ , we always have H (t,) ≤ n−2 . We
also note that since Ψt is non-decreasing in t, H (t,) is also
non-increasing in t.
Our first result is an easy-to-implement algorithm (see Algorithm 1) that identifies -top-K arms with sample complexity related to H (t,) .
Theorem 1 There is an algorithm that computes -top-K
arms with probability at least (1 − δ), and pulls the
 arms
at most O log log −1 + log n + log δ −1 H (t,) times.

The problem of identifying the single best arm (i.e.
the top-K arms with K = 1), has been studied extensively (Even-Dar et al., 2002; Mannor & Tsitsiklis,
2004; Audibert et al., 2010; Gabillon et al., 2011; 2012;
Karnin et al., 2013; Jamieson et al., 2014; Kaufmann
et al., 2016; Garivier & Kaufmann, 2016; Russo, 2016;
Chen et al., 2016b). More specifically, in the special
case when K = 1, our problem reduces to identifying
an -best arm, i.e. an arm whose expected reward is
different from the best arm by an additive error of at most
, with probability at least (1 − δ). For this problem,
Even-Dar et al. (2006) showed an algorithm with an
instance-independent sample complexity O n2 log δ −1
(and this was proved to be asymptotically optimal by
Mannor & Tsitsiklis (2004)). An instance-dependent algorithm for this problem was given by Bubeck et al. (2013)
and an improved algorithm was given by Karnin et al.
(2013)
sample complexity of 
Pn with an instance-dependent
−2
−1
max{∆
,
}
(log
δ
+
log
log max{∆i , }−1 ) .
O
i
i=2

Adaptive Multiple-Arm Identification

In
the
worst
case,  this
bound
becomes
O n2 (log δ −1 + log log −1 ) ,
almost
matching
the instance-independent bound in Even-Dar et al.
(2006). When K = 1, we
Pnhave t(, K) =−20 and thus
. ThereH (t,) = H (0,) = Θ
i=2 max{∆i , }
fore, the sample complexity in our Theorem 2 becomes

O((log −1 + log δ −1 )H) = O n2 (log −1 + log δ −1 ) in
the worst-case, almost matching the bound by Karnin et al.
(2013).
For the problem of identifying top-K arms with K >
1, different notions of -optimal solution have been proposed. One popular metric is the misidentification probability (M IS P ROB), i.e., Pr(T 6= {1, . . . , K}). In the PAC
setting (i.e., controlling M IS P ROB less than  with probability at least 1 − δ), many algorithms have been developed
recently, e.g., Bubeck et al. (2013) in the fixed budget setting and Chen et al. (2014) for both fixed confidence and
fixed budget settings. Gabillon et al. (2016) further improved the sample complexity in Chen et al. (2014); however the current implementation of their algorithm has an
exponential running time. As argued in Zhou et al. (2014),
the M IS P ROB requires to identify the exact top-K arms,
which might be too stringent for some applications (e.g.,
crowdsourcing). The M IS P ROB requires a certain gap between θK and θK+1 to identify the top-K arms, and this
requirement is not unnecessary when using the aggregate
regret. As shown in Zhou et al. (2014), when the gap of
any consecutive pair between θi and θi+1 among the first
2K arms is o(1/n), the sample complexity has to be huge
(ω(n2 )) to make the M IS P ROB less than , while any K
arms among the first 2K form a desirably set of -top-K
arms in terms of aggregate regret. Therefore, we follow
Zhou et al. (2014) and adopt the aggregate regret to define
the approximate solution in this paper.
Kalyanakrishnan et al. (2012) proposed the so-called
E XPLORE -K metric, which requires for each arm i in the
selected set T to satisfy θi ≥ θK −  , where θK is the
mean of the K-th best arm. Cao et al. (2015) proposed
a more restrictive notion of optimality—E LEMENTWISE -O PTIMAL, which requires the mean reward of the i-th
best arm in the selected set T be at least θi −  for 1 ≤
i ≤ K. It is clear that the E LEMENT WISE --O PTIMAL is
a stronger guarantee than our -top-K in regret, while the
latter is stronger than E XPLORE -K. Chen et al. (2016a)
further extended Cao et al. (2015) to pure exploration problems under matroid constraints. Audibert et al. (2010) and
Bubeck et al. (2013) considered expected
aggregate regret

PK
P
1
, where the expectation
(i.e., K
i=1 θi − E
i∈T θi
is taken over the randomness of the algorithm. Note that
this notion of expected aggregate regret is a weaker objective than the aggregate regret.
Moreover, there are some other recent works studying the

problem of best-arm identification in different setups, e.g.,
linear contextual bandit (Soare et al., 2014), batch arm pulls
(Jun et al., 2016).
For our -top-K arm problem, the state-of-the-art instancedependent sample complexity was given by Chen et al.
(2014) (see Section B.2 in Appendix of their paper). More
specifically, Chen et al. (2014) proposed CLUCB-PAC
algorithms that finds -top-K arms with probability
at

least (1−δ) using O log δ −1 + log H (0,) H (0,) pulls.
Since H (0,) ≥ H (t,) ≥ Ω(n) and H (0,) ≥ (Ψt )−2 ,
our Theorem 1 is not worse than the bound in Chen et al.
(2014). Indeed, in many common settings, H (t,) can be
much smaller than H (0,) so that Theorem 1 (and therefore
Theorem 2) requires much less sample complexity. We explain this argument in more details as follows.
In many real-world applications, it is common to assume
the arms θi are sampled from a prior distribution D over
[0, 1] with cumulative distribution function FD (θ). In
fact, this is the most fundamental assumption in Bayesian
multi-armed bandit literature (e.g., best-arm identification
in Bayesian setup (Russo, 2016)). In crowdsourcing applications, Chen et al. (2015) and Abbasi-Yadkori et al. (2015)
also made this assumption for modeling workers’ accuracy,
which correspond to the expected rewards. Under this assumption, it is natural to let θi be the (1− ni ) quantile of the
distribution D, i.e. FD−1 (1− ni ). If the prior distribution D’s
D
probability density function fD = dF
dθ has bounded value
(a few common examples include uniform distribution over
[0, 1], Beta distribution, or the truncated Gaussian distribution), the arms’ mean rewards {θi }ni=1 can be characterized
by the following property with c = O(1).
Definition 1 We call a set of n arms θ1 ≥ θ2 ≥ · · · ≥ θn
c-spread (for
h some c ≥ i1) if for all i, j ∈ [n] we have
|θi − θj | ∈

|i−j| c|i−j|
cn ,
n

.

The following lemma upper-bounds H (t,) for O(1)-spread
arms, and shows the improvement of our algorithms compared to Chen et al. (2014) on O(1)-spread arms. The proof
of Lemma 1 is based on simple calculations and is deferred
to the full version of this paper.
Lemma 1 Given a set of n c-spread arms, let K = γn ≤
n
c = O(1) and γ = Ω(1), we have H (t,) =
2 . When
√
O(n/ ). In contrast, H (0,) = Ω(n/) for O(1)-spread
arms and every K ∈ [n].

2. An Instance Dependent Algorithm for
-top-K Arms
In this section, we show Theorem 1 by providing Algorithm 1 and proving the following theorem.

Adaptive Multiple-Arm Identification

1

2
3
4
5

6

7
8
9
10

Algorithm 1 A DAPTIVE T OP K(n, , K, δ)
Input: n: number of arms; K and : parameters in -top-K
arms; δ: error probability
Output: -top-K arms
Let r denote the current round, initialized to be 0. Let Sr ⊆
[n] denote the set of candidate arms at round r. S1 is
initialized to be [n]. Set A, B ← ∅
∆ ← 2−r
while 2 · ∆ · (K − |A|) > K do
r ←r+1
2
Pull each arm in Sr by ∆−2 ln 2nr
times, and let θeir
δ
be the empirical-mean
Define θea (Sr ) and θeb (Sr ) be the (K − |A| + 1)th and
(K − |A|)th largest empirical-means in Sr , and define


e i (Sr ) = max θeir − θea (Sr ), θeb (Sr ) − θeir
(7)
∆
e i (Sr ) > 2 · ∆ do
while maxi∈Sr ∆
e i (Sr )
x ← arg maxi∈Sr ∆
r
e
e
if θx > θa (Sr ) then
A ← A ∪ {x}

12

else
B ← B ∪ {x}

13

Sr ← Sr \{x}

11

14
15
16

17

Sr+1 ← Sr
∆ ← 2−r
Set A0 as the (K − |A|) arms with the largest empiricalmeans in Sr+1
return A ∪ A0

are within a small neighborhood of their true means, happens with probability at least 1 − δ (See Definition 2 and
Claim 1). Note that E is defined for all rounds and the
length of the neighborhood becomes smaller as the algorithm proceeds. We are able to prove that when E happens,
the algorithm returns the desired set of -top-K arms and
has small query complexity.
To prove the correctness of the algorithm, we first show
that when conditioning on E, the algorithm always accepts
a top-K arm in A (Lemma 3) and rejects a non-top-K arm
in B (Lemma 4). The key observation here is that our algorithm never introduces any regret due to arms in A and
B. We then use the key Lemma 5 to upper bound the regret
that may be introduced due to the remaining arms. Once
this upper bound is not more than K (i.e. the total budget
for regret), we can choose the remaining (K − |A|) arms
without further samplings. Details about this analysis can
be found in Section 2.1.
We analyze of the query complexity of our algorithm in
Section 2.2. We establish data-dependent bound by relating
the number of pulls to each arms to both their ∆i ’s and
∆K−t (Lemma 6 and Lemma 7).
2.1. Correctness of Algorithm 1
We first define an event E which we will condition on in
the rest of the analysis.
Definition 2 Let E be the event that |θeir − θi | < 2−r for all
r ≥ 1 and i ∈ Sr .
Claim 1 Pr[E] ≥ 1 − δ.

Theorem 4 Algorithm 1 computes -top-K arms with
probability at least 1 − δ, and pulls the arms at most
!
n

n X
−2
 −2
 −1
min{(∆i ) , (∆t ) }
O
log log(∆t ) + log
δ i=1
times, where t ∈ {0, 1, 2, . . . , K − 1} is the largest integer
satisfying ∆K−t · t ≤ K, and ∆t = max(, ∆K−t ).
Note that Theorem 4 implies Theorem 1 because of the following reasons: 1) t defined in Theorem 4 is always at least
t(, K) defined in (3); and 2) ∆t ≥ Ψt ≥ .
Algorithm 1 is similar to the accept-reject types of algorithms in for example Bubeck et al. (2013). The algorithm
goes by rounds for r = 1, 2, 3, . . . , and keeps at set of undecided arms Sr ⊆ [n] at Round r. All other arms (in
[n] \ Sr ) are either accepted (in A) or rejected (in B). At
each round, all undecided arms are pulled by equal number of times. This number is chosen to ensure that the
event E, which is defined as the empirical means of all arms

Proof : By Hoeffding’s
inequality, we
h
i can show that for any
δ
δ
2
r
−r
e
≤ 2nr
fixed r and i, Pr |θi − θi | ≥ 2
≤ 2( 2nr
2)
2.
By a union bound,
Pr[¬E] ≤

∞ X
X
r=1 i∈Sr

∞
h
i X
δ
Pr |θeir − θi | ≥ 2−r ≤
≤ δ.
2r2
r=1


The following lemma will be a very useful tool for our analysis, the proof of which is deferred to the full version of this
paper.
Lemma 2 Given µ1 ≥ . . . ≥ µn and ∆ > 0, assuming
that |e
µi −µi | ≤ ∆ for all i ∈ [n], and letting y1 ≥ . . . ≥ yn
be the sorted version of µ
e1 , . . . , µ
en , we have |yi − µi | ≤
∆ for all i ∈ [n].
We now prove that conditioned on E, the algorithm always
accepts a desired arm in A.

Adaptive Multiple-Arm Identification

Lemma 3 Conditioned on E, during the run of Algorithm 1, A ⊆ {1, 2, . . . , K}, that is, all arms in A are
among the top-K arms.
Proof : We prove by induction on the round r. The lemma
holds trivially when r = 0 (A = ∅). Now fix a round
r ≥ 1, and let x be the arm that is added to A at Line 10 of
Algorithm 1. By the induction hypothesis, assuming that
before round r all arms in A are in [K], our goal is to show
x ∈ [K].
By the inner while condition we have
θer − θea (Sr ) > 2 · 2−r .
x

e i (Sr ) and ∆i ,
Combining (11), (12) and the definitions of ∆
the lemma follows.

Now we are ready to prove the correctness of Theorem 4.
By Lemma 3, all the arms that we add into the set A at
Line 10 are in [K]. The rest of our job is to look at the
arms in the set A0 .
When the algorithm exits the outer while loop (at round
r = r∗ ) and arrives at Line 16, we have by the condition of
the outer while loop that
∗

2 · 2−r · (K − |A|) ≤ K.
(8)

For any m ∈ [K − |A| + 1, |Sr |], let j be the arm of the
m-th largest true-mean in Sr , and j 0 be the arm of the m-th
largest empirical-mean in Sr . Since m ≥ K − |A| + 1, we
must have j 6∈ [K] and θejr0 ≤ θea (Sr ). By Lemma 2 we also
have |θejr0 − θj | < 2−r . We thus have
by (8)

Let m = K − |A|, and C = [K]\A = {i1 , i2 , . . . , im }
where i1 < i2 < . . . < im . Let θej1 ≥ θej2 ≥ . . . ≥ θejm
be the (K − |A|) empirical-means of the arms that we pick
at Line 16. Note that it is not necessary that j1 < . . . <
jm . By Lemma 2 and E, for any s ∈ [K − |A|], we have
∗
∗
|θejs − θis | ≤ 2−r and |θejs − θjs | ≤ 2−r . By the triangle
inequality, it holds that

θx > θexr − 2−r > θea (Sr ) + 2−r > θejr0 + 2−r > θj .
That is, at least |Sr | − K + |A| arms in Sr have true-means
smaller than arm x. On the other hand, |Sr |−K +|A| arms
in Sr are not in [K]. We therefore conclude that x must be
in [K].

By symmetry, we also have the following lemma, stating
that when E happens, the algorithm always rejects a nontop-K arm in B. We omit the proof because it is almost
identical to the proof of Lemma 3.
Lemma 4 Conditioning on E, during the run of Algorithm 1, B ⊆ {K + 1, K + 2, . . . , n}.
Lemma 5 Conditioned on E, for all rounds r and i ∈ Sr ,
it holds that
θeir − θea (Sr ) > θi − θK+1 − 2 · 2−r
(9)
and

θeb (Sr ) − θeir > θK − θi − 2 · 2−r .

(13)

∗

|θjs − θis | ≤ 2 · 2−r .

(14)

We thus can bound the error introduced by arms in A0 by
X
X
X
X
θi −
θi =
θi −
θi
i∈[K]

i∈A∪A0

i∈A0

i∈C

by (14)

≤

∗

2 · 2−r · (K − |A|)

by (13)

≤

K.

2.2. Query Complexity of Algorithm 1
Recall (in the statement of Theorem 4) that t
{0, 1, 2, . . . , K − 1} is the largest integer satisfying
∆K−t · t ≤ K.

∈
(15)

Lemma 6 If the algorithm exits the outer while loop at
round r = r∗ , then we must have
∗

8 · 2−r ≥ ∆K−t .

(16)

(10)
The proof is deferred to the full version of this paper.

e i (Sr ) ≥ ∆i −2·2−r for all rounds
Consequently, we have ∆
r and i ∈ Sr .
Proof : We look at a particular round r. Let j be the arm
with (K − |A| + 1)-th largest true-mean in Sr . Since by
Lemma 3 we have A ⊆ [K] , it holds that j ≥ K + 1. By
Lemma 2, we also have |θea (Sr ) − θj | < 2−r . We therefore
have for any i ∈ Sr
θeir − θea (Sr ) > θi −θj −2·2−r ≥ θi −θK+1 −2·2−r . (11)

Lemma 7 For any arm i, let ri be the round where arm
i is removed from the candidate set if this ever happens;
otherwise set ri = r∗ . We must have
8 · 2−ri ≥ ∆i .
The proof is deferred to the full version of this paper.
With Lemma 6 and Lemma 7, we are ready to analyze the
query complexity of the algorithm in Theorem 4. We can
bound the number of pulls on each arm i by at most

With a similar argument (by symmetry and using
Lemma 4), we can show that

ri
X

θeb (Sr ) − θeir > θK − θi − 2 · 2−r .

j=1

(12)

(17)


22j · log(2nj 2 /δ) ≤ O log(ri · nδ −1 ) · 22ri . (18)

Adaptive Multiple-Arm Identification

Now let us upper-bound the RHS of (18). First, if i ∈ A,
then by (17) we know that ri ≤ log2 ∆−1
i + O(1). Second,
by (16) we have ri ≤ r∗ ≤ log2 ∆−1
K−t +O(1). Third, since
∗
2−r ≥ /2 (otherwise the algorithm will exit the outer
while loop), we have ri ≤ r∗ ≤ log2 −1 + O(1). To sum−1
−1
marize, we have ri ≤ log2 min{∆−1
} +
i , ∆K−t , 
−1
 −1
O(1)
=
log2 min{∆i , (∆t ) } + O(1)
(recall that ∆t
=
max{, ∆K−t }).
We
thus can upper-bound the RHS of (18)  by
O (log log(∆t )−1 + log nδ ) · min{(∆i )−2 , (∆t )−2 } .
The total cost is a summation over all n arms.
Remark 1 As we stated in Theorem 2, the log n factor
from Theorem 1 can be removed. On the other hand, our
lower bound result (see Theorem 3) shows that an extra
log(−1 ) in Theorem 2 is necessary when we make the algorithm adaptive. The proofs of Theorem 2 and Theorem 3
are deferred to the full version of this paper.

3. Experiments
In this section we present the experimental results. While
our theorems are presented in the PAC form, it is in general
difficult to verify them directly because the parameter  is
merely an upper bound and the actual aggregate regret may
deviate from it. In our experiment, we convert our Algorithm 1 to the fixed-budget version (that is, fix the budget of
the number of pulls and calculate the aggregate regret). We
compare our Algorithm 1 (AdaptiveTopK ) with two stateof-the-art methods – OptMAI in Zhou et al. (2014) and
CLUCB-PAC in Chen et al. (2014). The comparison between OptMAI /CLUCB-PAC and previous methods (e.g.,
the methods in Bubeck et al. (2013) and Kalyanakrishnan
et al. (2012)) have already been demonstrated in Zhou et al.
(2014) and Chen et al. (2014), and thus are omitted due to
space constraints. To convert our algorithm to the fixedbudget version, we remove the outer while loop of Algorithm 1. As a replacement, we keep track of the total number of pulls, and stop pulling the arms once the budget is
exhausted.
We test our algorithm on both synthetic and real datasets
(due to space constraints, our results on real datasets are
deferred to the full version of this paper) as described as
follows.
• T WO G ROUP: the mean reward for the top K arms is
set to 0.7 and that for the rest of the arms is set to 0.3.
• U NIFORM: we set θi = 1 −

i
n

for 1 ≤ i ≤ n.

K
i p
• S YNTHETIC-p: we set θi = (1 − K
n ) + n · (1 − K )
K
n−K
i−K p
for each i ≤ K and θi = (1 − n ) − n · ( n−K )
for each i > K. Note that S YNTHETIC-1 is identical
to U NIFORM. When p is larger than 1, arms are made

closer to the boundary that separates the top-K from
the rest (i.e. 1 − K
n ). When p is smaller than 1, arms
are made farther to the boundary. We normalize all the
arms such that the mean values of the arms still span
the whole interval [0, 1]. We consider p = .5, 1, 6.

We set the total number of arms n = 1, 000, the tolerance
parameter  = 0.01, and vary the parameter K. In AdaptiveTopK and CLUCB-PAC, another parameter δ (i.e., the
failure probability) is required and we set δ = 0.01.
For each dataset, we first fix the budget (total number of
pulls allowed) and run each algorithm 200 times. For each
algorithm, we calculate the empirical probability (over 200
runs) that the aggregate regret of the selected arms is above
the tolerance threshold  = 0.01, which is called failure
probability. A smaller failure probability means better performance. For each dataset and different K, we plot the
curve of failure probability by varying the number of pulls.
The results are shown in Figure 1-4.
It can be observed from the experimental results that AdaptiveTopK (Algorithm 1) outperforms CLUCB-PAC in almost all the datasets. When K is relatively small, OptMAI has the best performance in most datasets. When K
is large, AdaptiveTopK outperforms OptMAI . The details
of the experimental results are elaborated as follows.

• For T WO G ROUP dataset (see Figure 1), AdaptiveTopK outperforms other algorithms significantly for
all values of K. The advantage comes from the adaptivity of our algorithm. In the T WO G ROUP dataset,
top-K arms are very well separated from the rest.
Once our algorithm identifies this situation, it need
only a few pulls to classify the arms. In details, the
inner while loop (Line 7) of Algorithm 1 make it possible to accept/reject a large number of arms in one
round as long as the algorithm is confident.
• As K increases, the advantage of AdaptiveTopK over
other algorithms (OptMAI in particular) becomes
more significant. This can be explained by the definition of H (t,) : t = t(, K) usually becomes bigger
as K grows, leading to a smaller hardness parameter
H (t,) .
• A comparison between S YNTHETIC -.5, U NIFORM,
S YNTHETIC -6 reveals that the advantage of AdaptiveTopK over other algorithms (OptMAI in particular) becomes significant in both extreme scenarios,
i.e., when arms are very well separated (p  1) and
when arms are very close to the separation boundary
(p  1).

Adaptive Multiple-Arm Identification

(a) K = 100

(b) K = 250

(c) K = 500

Figure 1: T WO G ROUP dataset

(a) K = 100

(b) K = 250

(c) K = 500

Figure 2: S YNTHETIC -.5 dataset

(a) K = 100

(b) K = 250

(c) K = 500

Figure 3: U NIFORM dataset

(a) K = 100

(b) K = 250

(c) K = 500

Figure 4: S YNTHETIC -6 dataset

4. Conclusion and Future Work
In this paper, we proposed two algorithms for a PAC
version of the multiple-arm identification problem in a
stochastic multi-armed bandit (MAB) game. We introduced a new hardness parameter for characterizing the difficulty of an instance when using the aggregate regret as the
evaluation metric, and established the instance-dependent
sample complexity based on this hardness parameter. We
also established lower bound results to show the optimality of our algorithm in the worst case. Although we only
consider the case when the reward distribution is supported
on [0, 1], it is straightforward to extend our results to subGaussian reward distributions.
For future directions, it is worthwhile to consider more gen-

eral problem of pure exploration of MAB under matroid
constraints, which includes the multiple-arm identification
as a special case, or other polynomial-time-computable
combinatorial constraints such as matchings. It is also interesting to extend the current work to finding top-K arms
in a linear contextual bandit framework.

References
Abbasi-Yadkori, Yasin, Bartlett, Peter, Chen, Xi, and
Malek, Alan. Large-scale markov decision problems
with KL control cost and its application to crowdsourcing. In Proceedings of International Conference on Machine Learning (ICML), 2015.
Audibert, J.Y., Bubeck, S., and Munos, R. Best arm iden-

Adaptive Multiple-Arm Identification

tification in multi-armed bandits. In Proceedings of the
Conference on Learning Theory (COLT), 2010.
Bubeck, Sebastian, Wang, Tengyao, and Viswanathan,
Nitin. Multiple identifications in multi-armed bandits.
In Proceedings of the International Conference on Machine Learning (ICML), 2013.
Cao, Wei, Li, Jian, Tao, Yufei, and Li, Zhize. On topk selection in multi-armed bandits and hidden bipartite
graphs. In Proceedings of Advances in Neural Information Processing Systems (NIPS), 2015.
Chen, Lijie, Gupta, Anupam, and Li, Jian. Pure exploration
of multi-armed bandit under matroid constraints. In Proceedings of the Conference on Learning Theory (COLT),
2016a.
Chen, Lijie, Li, Jian, and Qiao, Mingda. Towards instance optimal bounds for best arm identification. arXiv
preprint arXiv:1608.06031, 2016b.
Chen, Shouyuan, Lin, Tian, King, Irwin, Lyu, Michael R.,
and Chen, Wei. Combinatorial pure exploration of multiarmed bandits. In Proceedings of Advances in Neural
Information Processing Systems (NIPS), 2014.
Chen, Xi, Lin, Qihang, and Zhou, Dengyong. Statistical
decision making for optimal budget allocation in crowd
labeling. Journal of Machine Learning Research, 16:1–
46, 2015.
Even-Dar, Eyal, Mannor, Shie, and Mansour, Yishay. PAC
bounds for multi-armed bandit and markov decision processes. In Proceedings of the Annual Conference on
Learning Theory (COLT), 2002.
Even-Dar, Eyal, Mannor, Shie, and Mansour, Yishay. Action elimination and stopping conditions for the multiarmed bandit and reinforcement learning problems.
Journal of machine learning research, 7:1079–1105,
2006.
Gabillon, Victor, Ghavamzadeh, Mohammad, Lazaric,
Alessandro, and Bubeck, Sébastien. Multi-bandit best
arm identification. In Proceedings of Advances in Neural Information Processing Systems (NIPS), 2011.
Gabillon, Victor, Ghavamzadeh, Mohammad, and Lazaric,
Alessandro. Best arm identification: A unified approach
to fixed budget and fixed confidence. In Proceedings
of Advances in Neural Information Processing Systems
(NIPS), 2012.
Gabillon, Victor, Lazaric, Alessandro, Ghavamzadeh, Mohammad, Ortner, Ronald, and Bartlett, Peter. Improved
learning complexity in combinatorial pure exploration
bandits. In Proceedings of the International Conference
on Artificial Intelligence and Statistics, 2016.

Garivier, A. and Kaufmann, E. Optimal best-arm identification with fixed confidence. In Proceedings of the Conference on Learning Theory (COLT), 2016.
Jamieson, Kevin, Malloy, Matthew, Nowak, Robert, and
Bubeck, Sébastien. UCB : An optimal exploration algorithm for multi-armed bandits. In Proceedings of the
Conference on Learning Theory (COLT), 2014.
Jun, Kwang-Sung, Jamieson, Kevin, Nowak, Robert, and
Zhu, Xiaojin. Top arm identification in multi-armed bandits with batch arm pulls. In Proceedings of the International Conference on Artificial Intelligence and Statistics
(AISTATS), 2016.
Kalyanakrishnan, Shivaram, Tewari, Ambuj, Auer, Peter,
and Stone, Peter. PAC subset selection in stochastic
multi-armed bandits. In Proceedings of International
Conference on Machine Learning (ICML), 2012.
Karnin, Zohar, Koren, Tomer, and Somekh, Oren. Almost
optimal exploration in multi-armed bandits. In Proceedings of International Conference on Machine Learning
(ICML), 2013.
Kaufmann, Emilie, Cappé, Olivier, and Garivier, Aurélien.
On the complexity of best arm identification in multiarmed bandit models. Journal of Machine Learning Research, 17:1–42, 2016.
Mannor, Shie and Tsitsiklis, John N. The sample complexity of exploration in the multi-armed bandit problem. Journal of Machine Learning Research, 5:623–648,
2004.
Russo, Daniel. Simple bayesian algorithms for best arm
identification. In Proceedings of the Conference on
Learning Theory (COLT), 2016.
Soare, Marta, Lazaric, Alessandro, and Munos, Remi.
Best-arm identification in linear bandits. In Proceedings
of Advances in Neural Information Processing Systems
(NIPS), 2014.
Zhou, Yuan, Chen, Xi, and Li, Jian. Optimal PAC multiple arm identification with applications to crowdsourcing. In Proceedings of International Conference on Machine Learning (ICML), 2014.

